// Generated from grammar/SyslLexer.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 78, 904,
	8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5,
	9, 5, 4, 6, 9, 6, 4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4,
	11, 9, 11, 4, 12, 9, 12, 4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16,
	9, 16, 4, 17, 9, 17, 4, 18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9,
	21, 4, 22, 9, 22, 4, 23, 9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26,
	4, 27, 9, 27, 4, 28, 9, 28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4,
	32, 9, 32, 4, 33, 9, 33, 4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37,
	9, 37, 4, 38, 9, 38, 4, 39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9,
	42, 4, 43, 9, 43, 4, 44, 9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47,
	4, 48, 9, 48, 4, 49, 9, 49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4,
	53, 9, 53, 4, 54, 9, 54, 4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58,
	9, 58, 4, 59, 9, 59, 4, 60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9,
	63, 4, 64, 9, 64, 4, 65, 9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68,
	4, 69, 9, 69, 4, 70, 9, 70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4,
	74, 9, 74, 4, 75, 9, 75, 4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79,
	9, 79, 4, 80, 9, 80, 4, 81, 9, 81, 4, 82, 9, 82, 4, 83, 9, 83, 4, 84, 9,
	84, 4, 85, 9, 85, 4, 86, 9, 86, 4, 87, 9, 87, 4, 88, 9, 88, 4, 89, 9, 89,
	4, 90, 9, 90, 4, 91, 9, 91, 4, 92, 9, 92, 4, 93, 9, 93, 4, 94, 9, 94, 4,
	95, 9, 95, 4, 96, 9, 96, 4, 97, 9, 97, 4, 98, 9, 98, 4, 99, 9, 99, 4, 100,
	9, 100, 4, 101, 9, 101, 4, 102, 9, 102, 4, 103, 9, 103, 4, 104, 9, 104,
	4, 105, 9, 105, 4, 106, 9, 106, 4, 107, 9, 107, 3, 2, 3, 2, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20,
	3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3,
	25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 5, 28, 337, 10, 28, 3, 29,
	3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3,
	29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 5, 29,
	360, 10, 29, 3, 29, 7, 29, 363, 10, 29, 12, 29, 14, 29, 366, 11, 29, 3,
	29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31,
	3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3,
	33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 34, 6, 34, 397, 10, 34,
	13, 34, 14, 34, 398, 3, 35, 3, 35, 6, 35, 403, 10, 35, 13, 35, 14, 35,
	404, 3, 35, 3, 35, 3, 35, 6, 35, 410, 10, 35, 13, 35, 14, 35, 411, 5, 35,
	414, 10, 35, 3, 35, 7, 35, 417, 10, 35, 12, 35, 14, 35, 420, 11, 35, 3,
	35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36,
	3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 7, 37, 438, 10, 37, 12, 37, 14, 37,
	441, 11, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 7, 38, 450,
	10, 38, 12, 38, 14, 38, 453, 11, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38,
	3, 38, 7, 38, 461, 10, 38, 12, 38, 14, 38, 464, 11, 38, 3, 38, 3, 38, 3,
	39, 3, 39, 3, 39, 3, 39, 3, 39, 7, 39, 473, 10, 39, 12, 39, 14, 39, 476,
	11, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40,
	7, 40, 487, 10, 40, 12, 40, 14, 40, 490, 11, 40, 3, 40, 3, 40, 3, 41, 3,
	41, 3, 41, 3, 41, 3, 41, 3, 41, 7, 41, 500, 10, 41, 12, 41, 14, 41, 503,
	11, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 7, 42,
	513, 10, 42, 12, 42, 14, 42, 516, 11, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3,
	43, 3, 43, 3, 43, 7, 43, 525, 10, 43, 12, 43, 14, 43, 528, 11, 43, 3, 43,
	3, 43, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 7, 44, 539, 10,
	44, 12, 44, 14, 44, 542, 11, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3,
	45, 3, 46, 3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 47, 7, 47, 557, 10, 47,
	12, 47, 14, 47, 560, 11, 47, 3, 47, 3, 47, 3, 47, 3, 48, 3, 48, 3, 48,
	3, 48, 7, 48, 569, 10, 48, 12, 48, 14, 48, 572, 11, 48, 3, 48, 3, 48, 3,
	48, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3, 50, 3, 50, 3, 51, 3, 51,
	6, 51, 587, 10, 51, 13, 51, 14, 51, 588, 3, 51, 3, 51, 3, 51, 3, 51, 3,
	51, 3, 52, 7, 52, 597, 10, 52, 12, 52, 14, 52, 600, 11, 52, 3, 52, 3, 52,
	3, 52, 3, 52, 7, 52, 606, 10, 52, 12, 52, 14, 52, 609, 11, 52, 3, 53, 3,
	53, 3, 53, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 55, 7, 55, 620, 10, 55,
	12, 55, 14, 55, 623, 11, 55, 3, 55, 3, 55, 3, 55, 3, 55, 7, 55, 629, 10,
	55, 12, 55, 14, 55, 632, 11, 55, 3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 3,
	56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 57, 3, 57, 3, 58, 3, 58, 3, 59, 3, 59,
	3, 60, 3, 60, 3, 61, 3, 61, 3, 62, 3, 62, 3, 62, 3, 63, 3, 63, 3, 64, 3,
	64, 3, 65, 3, 65, 3, 66, 3, 66, 3, 67, 3, 67, 3, 68, 3, 68, 3, 69, 3, 69,
	3, 69, 3, 69, 3, 70, 3, 70, 3, 70, 3, 71, 3, 71, 3, 71, 3, 72, 3, 72, 3,
	72, 3, 73, 3, 73, 3, 74, 3, 74, 3, 75, 3, 75, 3, 76, 3, 76, 3, 77, 3, 77,
	5, 77, 692, 10, 77, 3, 77, 3, 77, 3, 77, 3, 77, 3, 77, 3, 77, 3, 78, 3,
	78, 3, 78, 3, 78, 3, 79, 3, 79, 3, 79, 3, 79, 3, 80, 3, 80, 3, 81, 3, 81,
	3, 82, 6, 82, 713, 10, 82, 13, 82, 14, 82, 714, 3, 82, 5, 82, 718, 10,
	82, 3, 82, 3, 82, 3, 82, 3, 82, 3, 83, 6, 83, 725, 10, 83, 13, 83, 14,
	83, 726, 3, 83, 3, 83, 7, 83, 731, 10, 83, 12, 83, 14, 83, 734, 11, 83,
	3, 83, 5, 83, 737, 10, 83, 3, 83, 3, 83, 3, 83, 3, 83, 3, 84, 3, 84, 7,
	84, 745, 10, 84, 12, 84, 14, 84, 748, 11, 84, 3, 85, 7, 85, 751, 10, 85,
	12, 85, 14, 85, 754, 11, 85, 3, 86, 7, 86, 757, 10, 86, 12, 86, 14, 86,
	760, 11, 86, 3, 87, 3, 87, 3, 87, 3, 87, 3, 87, 3, 87, 3, 87, 3, 87, 5,
	87, 770, 10, 87, 3, 88, 5, 88, 773, 10, 88, 3, 88, 3, 88, 3, 88, 3, 88,
	3, 88, 3, 89, 3, 89, 3, 89, 3, 89, 3, 89, 3, 90, 6, 90, 786, 10, 90, 13,
	90, 14, 90, 787, 3, 91, 3, 91, 3, 91, 3, 91, 3, 92, 3, 92, 6, 92, 796,
	10, 92, 13, 92, 14, 92, 797, 3, 92, 3, 92, 5, 92, 802, 10, 92, 6, 92, 804,
	10, 92, 13, 92, 14, 92, 805, 3, 92, 3, 92, 3, 92, 3, 93, 3, 93, 7, 93,
	813, 10, 93, 12, 93, 14, 93, 816, 11, 93, 3, 94, 6, 94, 819, 10, 94, 13,
	94, 14, 94, 820, 3, 94, 3, 94, 3, 94, 3, 94, 3, 95, 7, 95, 828, 10, 95,
	12, 95, 14, 95, 831, 11, 95, 3, 95, 3, 95, 3, 96, 3, 96, 3, 96, 3, 96,
	3, 97, 3, 97, 3, 97, 3, 98, 3, 98, 3, 98, 3, 98, 3, 98, 3, 99, 3, 99, 3,
	99, 3, 99, 3, 99, 3, 99, 3, 99, 3, 99, 5, 99, 855, 10, 99, 3, 100, 6, 100,
	858, 10, 100, 13, 100, 14, 100, 859, 3, 101, 3, 101, 3, 102, 3, 102, 3,
	102, 3, 102, 3, 103, 3, 103, 7, 103, 870, 10, 103, 12, 103, 14, 103, 873,
	11, 103, 3, 104, 5, 104, 876, 10, 104, 3, 104, 3, 104, 3, 104, 3, 104,
	3, 104, 3, 104, 3, 105, 6, 105, 885, 10, 105, 13, 105, 14, 105, 886, 3,
	105, 3, 105, 3, 106, 3, 106, 3, 106, 3, 106, 3, 106, 3, 107, 3, 107, 7,
	107, 898, 10, 107, 12, 107, 14, 107, 901, 11, 107, 3, 107, 3, 107, 2, 2,
	108, 7, 2, 9, 2, 11, 2, 13, 2, 15, 2, 17, 2, 19, 2, 21, 2, 23, 2, 25, 2,
	27, 2, 29, 2, 31, 2, 33, 2, 35, 2, 37, 2, 39, 2, 41, 2, 43, 2, 45, 2, 47,
	2, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 59, 5, 61, 6, 63, 7, 65, 8, 67, 9,
	69, 2, 71, 2, 73, 10, 75, 11, 77, 12, 79, 13, 81, 14, 83, 15, 85, 16, 87,
	17, 89, 18, 91, 19, 93, 20, 95, 21, 97, 22, 99, 23, 101, 24, 103, 25, 105,
	26, 107, 27, 109, 28, 111, 29, 113, 30, 115, 31, 117, 32, 119, 33, 121,
	34, 123, 35, 125, 36, 127, 37, 129, 38, 131, 39, 133, 40, 135, 41, 137,
	42, 139, 43, 141, 44, 143, 45, 145, 46, 147, 47, 149, 48, 151, 49, 153,
	50, 155, 51, 157, 52, 159, 53, 161, 54, 163, 55, 165, 56, 167, 57, 169,
	58, 171, 59, 173, 2, 175, 2, 177, 60, 179, 61, 181, 62, 183, 2, 185, 2,
	187, 63, 189, 64, 191, 65, 193, 66, 195, 67, 197, 68, 199, 69, 201, 70,
	203, 71, 205, 72, 207, 73, 209, 74, 211, 75, 213, 76, 215, 77, 217, 78,
	7, 2, 3, 4, 5, 6, 47, 4, 2, 67, 67, 99, 99, 4, 2, 68, 68, 100, 100, 4,
	2, 69, 69, 101, 101, 4, 2, 70, 70, 102, 102, 4, 2, 71, 71, 103, 103, 4,
	2, 72, 72, 104, 104, 4, 2, 73, 73, 105, 105, 4, 2, 74, 74, 106, 106, 4,
	2, 75, 75, 107, 107, 4, 2, 76, 76, 108, 108, 4, 2, 77, 77, 109, 109, 4,
	2, 78, 78, 110, 110, 4, 2, 79, 79, 111, 111, 4, 2, 80, 80, 112, 112, 4,
	2, 81, 81, 113, 113, 4, 2, 82, 82, 114, 114, 4, 2, 83, 83, 115, 115, 4,
	2, 84, 84, 116, 116, 4, 2, 85, 85, 117, 117, 4, 2, 86, 86, 118, 118, 4,
	2, 87, 87, 119, 119, 4, 2, 88, 88, 120, 120, 4, 2, 89, 89, 121, 121, 4,
	2, 90, 90, 122, 122, 4, 2, 91, 91, 123, 123, 4, 2, 92, 92, 124, 124, 4,
	2, 11, 11, 34, 34, 8, 2, 11, 12, 15, 15, 34, 34, 49, 49, 60, 60, 94, 94,
	3, 2, 36, 36, 3, 2, 41, 41, 4, 3, 12, 12, 15, 15, 3, 2, 12, 12, 3, 3, 12,
	12, 3, 2, 50, 59, 5, 2, 12, 12, 15, 15, 36, 36, 5, 2, 12, 12, 15, 15, 41,
	41, 13, 2, 11, 12, 15, 15, 34, 37, 41, 43, 46, 49, 60, 60, 62, 62, 64,
	66, 93, 93, 95, 95, 125, 127, 4, 2, 34, 34, 47, 47, 4, 2, 67, 92, 99, 124,
	7, 2, 47, 47, 50, 59, 67, 92, 97, 97, 99, 124, 5, 2, 12, 12, 15, 15, 60,
	60, 3, 2, 34, 34, 11, 2, 12, 12, 15, 15, 36, 36, 41, 43, 46, 46, 60, 60,
	62, 62, 93, 93, 95, 95, 4, 2, 12, 12, 15, 15, 7, 2, 47, 48, 50, 59, 67,
	92, 97, 97, 99, 124, 2, 925, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63,
	3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2,
	75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2,
	2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2,
	2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2,
	2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105,
	3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2, 2, 2,
	2, 113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119, 3,
	2, 2, 2, 2, 121, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2, 2, 125, 3, 2, 2, 2, 2,
	127, 3, 2, 2, 2, 2, 129, 3, 2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3, 2,
	2, 2, 2, 135, 3, 2, 2, 2, 2, 137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2, 141,
	3, 2, 2, 2, 2, 143, 3, 2, 2, 2, 2, 145, 3, 2, 2, 2, 2, 147, 3, 2, 2, 2,
	2, 149, 3, 2, 2, 2, 2, 151, 3, 2, 2, 2, 2, 153, 3, 2, 2, 2, 2, 155, 3,
	2, 2, 2, 2, 157, 3, 2, 2, 2, 2, 159, 3, 2, 2, 2, 2, 161, 3, 2, 2, 2, 2,
	163, 3, 2, 2, 2, 2, 165, 3, 2, 2, 2, 2, 167, 3, 2, 2, 2, 2, 169, 3, 2,
	2, 2, 2, 171, 3, 2, 2, 2, 2, 177, 3, 2, 2, 2, 2, 179, 3, 2, 2, 2, 2, 181,
	3, 2, 2, 2, 2, 187, 3, 2, 2, 2, 2, 189, 3, 2, 2, 2, 2, 191, 3, 2, 2, 2,
	3, 193, 3, 2, 2, 2, 4, 195, 3, 2, 2, 2, 4, 197, 3, 2, 2, 2, 4, 199, 3,
	2, 2, 2, 4, 201, 3, 2, 2, 2, 4, 203, 3, 2, 2, 2, 4, 205, 3, 2, 2, 2, 4,
	207, 3, 2, 2, 2, 4, 209, 3, 2, 2, 2, 4, 211, 3, 2, 2, 2, 5, 213, 3, 2,
	2, 2, 6, 215, 3, 2, 2, 2, 6, 217, 3, 2, 2, 2, 7, 219, 3, 2, 2, 2, 9, 221,
	3, 2, 2, 2, 11, 223, 3, 2, 2, 2, 13, 225, 3, 2, 2, 2, 15, 227, 3, 2, 2,
	2, 17, 229, 3, 2, 2, 2, 19, 231, 3, 2, 2, 2, 21, 233, 3, 2, 2, 2, 23, 235,
	3, 2, 2, 2, 25, 237, 3, 2, 2, 2, 27, 239, 3, 2, 2, 2, 29, 241, 3, 2, 2,
	2, 31, 243, 3, 2, 2, 2, 33, 245, 3, 2, 2, 2, 35, 247, 3, 2, 2, 2, 37, 249,
	3, 2, 2, 2, 39, 251, 3, 2, 2, 2, 41, 253, 3, 2, 2, 2, 43, 255, 3, 2, 2,
	2, 45, 257, 3, 2, 2, 2, 47, 259, 3, 2, 2, 2, 49, 261, 3, 2, 2, 2, 51, 263,
	3, 2, 2, 2, 53, 265, 3, 2, 2, 2, 55, 267, 3, 2, 2, 2, 57, 269, 3, 2, 2,
	2, 59, 271, 3, 2, 2, 2, 61, 359, 3, 2, 2, 2, 63, 369, 3, 2, 2, 2, 65, 375,
	3, 2, 2, 2, 67, 382, 3, 2, 2, 2, 69, 388, 3, 2, 2, 2, 71, 396, 3, 2, 2,
	2, 73, 400, 3, 2, 2, 2, 75, 424, 3, 2, 2, 2, 77, 433, 3, 2, 2, 2, 79, 444,
	3, 2, 2, 2, 81, 467, 3, 2, 2, 2, 83, 479, 3, 2, 2, 2, 85, 493, 3, 2, 2,
	2, 87, 506, 3, 2, 2, 2, 89, 519, 3, 2, 2, 2, 91, 531, 3, 2, 2, 2, 93, 545,
	3, 2, 2, 2, 95, 549, 3, 2, 2, 2, 97, 552, 3, 2, 2, 2, 99, 564, 3, 2, 2,
	2, 101, 576, 3, 2, 2, 2, 103, 580, 3, 2, 2, 2, 105, 584, 3, 2, 2, 2, 107,
	598, 3, 2, 2, 2, 109, 610, 3, 2, 2, 2, 111, 613, 3, 2, 2, 2, 113, 621,
	3, 2, 2, 2, 115, 633, 3, 2, 2, 2, 117, 643, 3, 2, 2, 2, 119, 645, 3, 2,
	2, 2, 121, 647, 3, 2, 2, 2, 123, 649, 3, 2, 2, 2, 125, 651, 3, 2, 2, 2,
	127, 653, 3, 2, 2, 2, 129, 656, 3, 2, 2, 2, 131, 658, 3, 2, 2, 2, 133,
	660, 3, 2, 2, 2, 135, 662, 3, 2, 2, 2, 137, 664, 3, 2, 2, 2, 139, 666,
	3, 2, 2, 2, 141, 668, 3, 2, 2, 2, 143, 672, 3, 2, 2, 2, 145, 675, 3, 2,
	2, 2, 147, 678, 3, 2, 2, 2, 149, 681, 3, 2, 2, 2, 151, 683, 3, 2, 2, 2,
	153, 685, 3, 2, 2, 2, 155, 687, 3, 2, 2, 2, 157, 689, 3, 2, 2, 2, 159,
	699, 3, 2, 2, 2, 161, 703, 3, 2, 2, 2, 163, 707, 3, 2, 2, 2, 165, 709,
	3, 2, 2, 2, 167, 712, 3, 2, 2, 2, 169, 724, 3, 2, 2, 2, 171, 742, 3, 2,
	2, 2, 173, 752, 3, 2, 2, 2, 175, 758, 3, 2, 2, 2, 177, 769, 3, 2, 2, 2,
	179, 772, 3, 2, 2, 2, 181, 779, 3, 2, 2, 2, 183, 785, 3, 2, 2, 2, 185,
	789, 3, 2, 2, 2, 187, 793, 3, 2, 2, 2, 189, 810, 3, 2, 2, 2, 191, 818,
	3, 2, 2, 2, 193, 829, 3, 2, 2, 2, 195, 834, 3, 2, 2, 2, 197, 838, 3, 2,
	2, 2, 199, 841, 3, 2, 2, 2, 201, 854, 3, 2, 2, 2, 203, 857, 3, 2, 2, 2,
	205, 861, 3, 2, 2, 2, 207, 863, 3, 2, 2, 2, 209, 867, 3, 2, 2, 2, 211,
	875, 3, 2, 2, 2, 213, 884, 3, 2, 2, 2, 215, 890, 3, 2, 2, 2, 217, 895,
	3, 2, 2, 2, 219, 220, 9, 2, 2, 2, 220, 8, 3, 2, 2, 2, 221, 222, 9, 3, 2,
	2, 222, 10, 3, 2, 2, 2, 223, 224, 9, 4, 2, 2, 224, 12, 3, 2, 2, 2, 225,
	226, 9, 5, 2, 2, 226, 14, 3, 2, 2, 2, 227, 228, 9, 6, 2, 2, 228, 16, 3,
	2, 2, 2, 229, 230, 9, 7, 2, 2, 230, 18, 3, 2, 2, 2, 231, 232, 9, 8, 2,
	2, 232, 20, 3, 2, 2, 2, 233, 234, 9, 9, 2, 2, 234, 22, 3, 2, 2, 2, 235,
	236, 9, 10, 2, 2, 236, 24, 3, 2, 2, 2, 237, 238, 9, 11, 2, 2, 238, 26,
	3, 2, 2, 2, 239, 240, 9, 12, 2, 2, 240, 28, 3, 2, 2, 2, 241, 242, 9, 13,
	2, 2, 242, 30, 3, 2, 2, 2, 243, 244, 9, 14, 2, 2, 244, 32, 3, 2, 2, 2,
	245, 246, 9, 15, 2, 2, 246, 34, 3, 2, 2, 2, 247, 248, 9, 16, 2, 2, 248,
	36, 3, 2, 2, 2, 249, 250, 9, 17, 2, 2, 250, 38, 3, 2, 2, 2, 251, 252, 9,
	18, 2, 2, 252, 40, 3, 2, 2, 2, 253, 254, 9, 19, 2, 2, 254, 42, 3, 2, 2,
	2, 255, 256, 9, 20, 2, 2, 256, 44, 3, 2, 2, 2, 257, 258, 9, 21, 2, 2, 258,
	46, 3, 2, 2, 2, 259, 260, 9, 22, 2, 2, 260, 48, 3, 2, 2, 2, 261, 262, 9,
	23, 2, 2, 262, 50, 3, 2, 2, 2, 263, 264, 9, 24, 2, 2, 264, 52, 3, 2, 2,
	2, 265, 266, 9, 25, 2, 2, 266, 54, 3, 2, 2, 2, 267, 268, 9, 26, 2, 2, 268,
	56, 3, 2, 2, 2, 269, 270, 9, 27, 2, 2, 270, 58, 3, 2, 2, 2, 271, 336, 6,
	28, 2, 2, 272, 273, 5, 23, 10, 2, 273, 274, 5, 33, 15, 2, 274, 275, 5,
	45, 21, 2, 275, 276, 7, 53, 2, 2, 276, 277, 7, 52, 2, 2, 277, 337, 3, 2,
	2, 2, 278, 279, 5, 23, 10, 2, 279, 280, 5, 33, 15, 2, 280, 281, 5, 45,
	21, 2, 281, 282, 7, 56, 2, 2, 282, 283, 7, 54, 2, 2, 283, 337, 3, 2, 2,
	2, 284, 285, 5, 23, 10, 2, 285, 286, 5, 33, 15, 2, 286, 287, 5, 45, 21,
	2, 287, 337, 3, 2, 2, 2, 288, 289, 5, 17, 7, 2, 289, 290, 5, 29, 13, 2,
	290, 291, 5, 35, 16, 2, 291, 292, 5, 7, 2, 2, 292, 293, 5, 45, 21, 2, 293,
	337, 3, 2, 2, 2, 294, 295, 5, 43, 20, 2, 295, 296, 5, 45, 21, 2, 296, 297,
	5, 41, 19, 2, 297, 298, 5, 23, 10, 2, 298, 299, 5, 33, 15, 2, 299, 300,
	5, 19, 8, 2, 300, 337, 3, 2, 2, 2, 301, 302, 5, 13, 5, 2, 302, 303, 5,
	7, 2, 2, 303, 304, 5, 45, 21, 2, 304, 305, 5, 15, 6, 2, 305, 337, 3, 2,
	2, 2, 306, 307, 5, 9, 3, 2, 307, 308, 5, 35, 16, 2, 308, 309, 5, 35, 16,
	2, 309, 310, 5, 29, 13, 2, 310, 337, 3, 2, 2, 2, 311, 312, 5, 13, 5, 2,
	312, 313, 5, 15, 6, 2, 313, 314, 5, 11, 4, 2, 314, 315, 5, 23, 10, 2, 315,
	316, 5, 31, 14, 2, 316, 317, 5, 7, 2, 2, 317, 318, 5, 29, 13, 2, 318, 337,
	3, 2, 2, 2, 319, 320, 5, 13, 5, 2, 320, 321, 5, 7, 2, 2, 321, 322, 5, 45,
	21, 2, 322, 323, 5, 15, 6, 2, 323, 324, 5, 45, 21, 2, 324, 325, 5, 23,
	10, 2, 325, 326, 5, 31, 14, 2, 326, 327, 5, 15, 6, 2, 327, 337, 3, 2, 2,
	2, 328, 329, 5, 53, 25, 2, 329, 330, 5, 31, 14, 2, 330, 331, 5, 29, 13,
	2, 331, 337, 3, 2, 2, 2, 332, 333, 5, 7, 2, 2, 333, 334, 5, 33, 15, 2,
	334, 335, 5, 55, 26, 2, 335, 337, 3, 2, 2, 2, 336, 272, 3, 2, 2, 2, 336,
	278, 3, 2, 2, 2, 336, 284, 3, 2, 2, 2, 336, 288, 3, 2, 2, 2, 336, 294,
	3, 2, 2, 2, 336, 301, 3, 2, 2, 2, 336, 306, 3, 2, 2, 2, 336, 311, 3, 2,
	2, 2, 336, 319, 3, 2, 2, 2, 336, 328, 3, 2, 2, 2, 336, 332, 3, 2, 2, 2,
	337, 60, 3, 2, 2, 2, 338, 339, 7, 73, 2, 2, 339, 340, 7, 71, 2, 2, 340,
	360, 7, 86, 2, 2, 341, 342, 7, 82, 2, 2, 342, 343, 7, 81, 2, 2, 343, 344,
	7, 85, 2, 2, 344, 360, 7, 86, 2, 2, 345, 346, 7, 70, 2, 2, 346, 347, 7,
	71, 2, 2, 347, 348, 7, 78, 2, 2, 348, 349, 7, 71, 2, 2, 349, 350, 7, 86,
	2, 2, 350, 360, 7, 71, 2, 2, 351, 352, 7, 82, 2, 2, 352, 353, 7, 87, 2,
	2, 353, 360, 7, 86, 2, 2, 354, 355, 7, 82, 2, 2, 355, 356, 7, 67, 2, 2,
	356, 357, 7, 86, 2, 2, 357, 358, 7, 69, 2, 2, 358, 360, 7, 74, 2, 2, 359,
	338, 3, 2, 2, 2, 359, 341, 3, 2, 2, 2, 359, 345, 3, 2, 2, 2, 359, 351,
	3, 2, 2, 2, 359, 354, 3, 2, 2, 2, 360, 364, 3, 2, 2, 2, 361, 363, 9, 28,
	2, 2, 362, 361, 3, 2, 2, 2, 363, 366, 3, 2, 2, 2, 364, 362, 3, 2, 2, 2,
	364, 365, 3, 2, 2, 2, 365, 367, 3, 2, 2, 2, 366, 364, 3, 2, 2, 2, 367,
	368, 8, 29, 2, 2, 368, 62, 3, 2, 2, 2, 369, 370, 7, 35, 2, 2, 370, 371,
	7, 121, 2, 2, 371, 372, 7, 116, 2, 2, 372, 373, 7, 99, 2, 2, 373, 374,
	7, 114, 2, 2, 374, 64, 3, 2, 2, 2, 375, 376, 7, 35, 2, 2, 376, 377, 7,
	118, 2, 2, 377, 378, 7, 99, 2, 2, 378, 379, 7, 100, 2, 2, 379, 380, 7,
	110, 2, 2, 380, 381, 7, 103, 2, 2, 381, 66, 3, 2, 2, 2, 382, 383, 7, 35,
	2, 2, 383, 384, 7, 118, 2, 2, 384, 385, 7, 123, 2, 2, 385, 386, 7, 114,
	2, 2, 386, 387, 7, 103, 2, 2, 387, 68, 3, 2, 2, 2, 388, 389, 7, 107, 2,
	2, 389, 390, 7, 111, 2, 2, 390, 391, 7, 114, 2, 2, 391, 392, 7, 113, 2,
	2, 392, 393, 7, 116, 2, 2, 393, 394, 7, 118, 2, 2, 394, 70, 3, 2, 2, 2,
	395, 397, 10, 29, 2, 2, 396, 395, 3, 2, 2, 2, 397, 398, 3, 2, 2, 2, 398,
	396, 3, 2, 2, 2, 398, 399, 3, 2, 2, 2, 399, 72, 3, 2, 2, 2, 400, 402, 5,
	69, 33, 2, 401, 403, 7, 34, 2, 2, 402, 401, 3, 2, 2, 2, 403, 404, 3, 2,
	2, 2, 404, 402, 3, 2, 2, 2, 404, 405, 3, 2, 2, 2, 405, 413, 3, 2, 2, 2,
	406, 414, 5, 71, 34, 2, 407, 408, 7, 49, 2, 2, 408, 410, 5, 71, 34, 2,
	409, 407, 3, 2, 2, 2, 410, 411, 3, 2, 2, 2, 411, 409, 3, 2, 2, 2, 411,
	412, 3, 2, 2, 2, 412, 414, 3, 2, 2, 2, 413, 406, 3, 2, 2, 2, 413, 409,
	3, 2, 2, 2, 414, 418, 3, 2, 2, 2, 415, 417, 9, 28, 2, 2, 416, 415, 3, 2,
	2, 2, 417, 420, 3, 2, 2, 2, 418, 416, 3, 2, 2, 2, 418, 419, 3, 2, 2, 2,
	419, 421, 3, 2, 2, 2, 420, 418, 3, 2, 2, 2, 421, 422, 5, 179, 88, 2, 422,
	423, 8, 35, 3, 2, 423, 74, 3, 2, 2, 2, 424, 425, 5, 41, 19, 2, 425, 426,
	5, 15, 6, 2, 426, 427, 5, 45, 21, 2, 427, 428, 5, 47, 22, 2, 428, 429,
	5, 41, 19, 2, 429, 430, 5, 33, 15, 2, 430, 431, 3, 2, 2, 2, 431, 432, 8,
	36, 4, 2, 432, 76, 3, 2, 2, 2, 433, 434, 5, 23, 10, 2, 434, 435, 5, 17,
	7, 2, 435, 439, 3, 2, 2, 2, 436, 438, 9, 28, 2, 2, 437, 436, 3, 2, 2, 2,
	438, 441, 3, 2, 2, 2, 439, 437, 3, 2, 2, 2, 439, 440, 3, 2, 2, 2, 440,
	442, 3, 2, 2, 2, 441, 439, 3, 2, 2, 2, 442, 443, 8, 37, 5, 2, 443, 78,
	3, 2, 2, 2, 444, 445, 5, 17, 7, 2, 445, 446, 5, 35, 16, 2, 446, 447, 5,
	41, 19, 2, 447, 451, 3, 2, 2, 2, 448, 450, 9, 28, 2, 2, 449, 448, 3, 2,
	2, 2, 450, 453, 3, 2, 2, 2, 451, 449, 3, 2, 2, 2, 451, 452, 3, 2, 2, 2,
	452, 454, 3, 2, 2, 2, 453, 451, 3, 2, 2, 2, 454, 455, 5, 15, 6, 2, 455,
	456, 5, 7, 2, 2, 456, 457, 5, 11, 4, 2, 457, 458, 5, 21, 9, 2, 458, 462,
	3, 2, 2, 2, 459, 461, 9, 28, 2, 2, 460, 459, 3, 2, 2, 2, 461, 464, 3, 2,
	2, 2, 462, 460, 3, 2, 2, 2, 462, 463, 3, 2, 2, 2, 463, 465, 3, 2, 2, 2,
	464, 462, 3, 2, 2, 2, 465, 466, 8, 38, 5, 2, 466, 80, 3, 2, 2, 2, 467,
	468, 5, 17, 7, 2, 468, 469, 5, 35, 16, 2, 469, 470, 5, 41, 19, 2, 470,
	474, 3, 2, 2, 2, 471, 473, 9, 28, 2, 2, 472, 471, 3, 2, 2, 2, 473, 476,
	3, 2, 2, 2, 474, 472, 3, 2, 2, 2, 474, 475, 3, 2, 2, 2, 475, 477, 3, 2,
	2, 2, 476, 474, 3, 2, 2, 2, 477, 478, 8, 39, 5, 2, 478, 82, 3, 2, 2, 2,
	479, 480, 5, 47, 22, 2, 480, 481, 5, 33, 15, 2, 481, 482, 5, 45, 21, 2,
	482, 483, 5, 23, 10, 2, 483, 484, 5, 29, 13, 2, 484, 488, 3, 2, 2, 2, 485,
	487, 9, 28, 2, 2, 486, 485, 3, 2, 2, 2, 487, 490, 3, 2, 2, 2, 488, 486,
	3, 2, 2, 2, 488, 489, 3, 2, 2, 2, 489, 491, 3, 2, 2, 2, 490, 488, 3, 2,
	2, 2, 491, 492, 8, 40, 5, 2, 492, 84, 3, 2, 2, 2, 493, 494, 5, 15, 6, 2,
	494, 495, 5, 29, 13, 2, 495, 496, 5, 43, 20, 2, 496, 497, 5, 15, 6, 2,
	497, 501, 3, 2, 2, 2, 498, 500, 9, 28, 2, 2, 499, 498, 3, 2, 2, 2, 500,
	503, 3, 2, 2, 2, 501, 499, 3, 2, 2, 2, 501, 502, 3, 2, 2, 2, 502, 504,
	3, 2, 2, 2, 503, 501, 3, 2, 2, 2, 504, 505, 8, 41, 5, 2, 505, 86, 3, 2,
	2, 2, 506, 507, 5, 29, 13, 2, 507, 508, 5, 35, 16, 2, 508, 509, 5, 35,
	16, 2, 509, 510, 5, 37, 17, 2, 510, 514, 3, 2, 2, 2, 511, 513, 9, 28, 2,
	2, 512, 511, 3, 2, 2, 2, 513, 516, 3, 2, 2, 2, 514, 512, 3, 2, 2, 2, 514,
	515, 3, 2, 2, 2, 515, 517, 3, 2, 2, 2, 516, 514, 3, 2, 2, 2, 517, 518,
	8, 42, 5, 2, 518, 88, 3, 2, 2, 2, 519, 520, 5, 7, 2, 2, 520, 521, 5, 29,
	13, 2, 521, 522, 5, 45, 21, 2, 522, 526, 3, 2, 2, 2, 523, 525, 9, 28, 2,
	2, 524, 523, 3, 2, 2, 2, 525, 528, 3, 2, 2, 2, 526, 524, 3, 2, 2, 2, 526,
	527, 3, 2, 2, 2, 527, 529, 3, 2, 2, 2, 528, 526, 3, 2, 2, 2, 529, 530,
	8, 43, 5, 2, 530, 90, 3, 2, 2, 2, 531, 532, 5, 51, 24, 2, 532, 533, 5,
	21, 9, 2, 533, 534, 5, 23, 10, 2, 534, 535, 5, 29, 13, 2, 535, 536, 5,
	15, 6, 2, 536, 540, 3, 2, 2, 2, 537, 539, 9, 28, 2, 2, 538, 537, 3, 2,
	2, 2, 539, 542, 3, 2, 2, 2, 540, 538, 3, 2, 2, 2, 540, 541, 3, 2, 2, 2,
	541, 543, 3, 2, 2, 2, 542, 540, 3, 2, 2, 2, 543, 544, 8, 44, 5, 2, 544,
	92, 3, 2, 2, 2, 545, 546, 7, 48, 2, 2, 546, 547, 7, 48, 2, 2, 547, 548,
	7, 48, 2, 2, 548, 94, 3, 2, 2, 2, 549, 550, 7, 48, 2, 2, 550, 551, 7, 48,
	2, 2, 551, 96, 3, 2, 2, 2, 552, 553, 5, 43, 20, 2, 553, 554, 5, 15, 6,
	2, 554, 558, 5, 45, 21, 2, 555, 557, 9, 28, 2, 2, 556, 555, 3, 2, 2, 2,
	557, 560, 3, 2, 2, 2, 558, 556, 3, 2, 2, 2, 558, 559, 3, 2, 2, 2, 559,
	561, 3, 2, 2, 2, 560, 558, 3, 2, 2, 2, 561, 562, 5, 35, 16, 2, 562, 563,
	5, 17, 7, 2, 563, 98, 3, 2, 2, 2, 564, 565, 5, 35, 16, 2, 565, 566, 5,
	33, 15, 2, 566, 570, 5, 15, 6, 2, 567, 569, 9, 28, 2, 2, 568, 567, 3, 2,
	2, 2, 569, 572, 3, 2, 2, 2, 570, 568, 3, 2, 2, 2, 570, 571, 3, 2, 2, 2,
	571, 573, 3, 2, 2, 2, 572, 570, 3, 2, 2, 2, 573, 574, 5, 35, 16, 2, 574,
	575, 5, 17, 7, 2, 575, 100, 3, 2, 2, 2, 576, 577, 7, 47, 2, 2, 577, 578,
	7, 126, 2, 2, 578, 579, 7, 64, 2, 2, 579, 102, 3, 2, 2, 2, 580, 581, 7,
	62, 2, 2, 581, 582, 7, 47, 2, 2, 582, 583, 7, 64, 2, 2, 583, 104, 3, 2,
	2, 2, 584, 586, 7, 48, 2, 2, 585, 587, 9, 28, 2, 2, 586, 585, 3, 2, 2,
	2, 587, 588, 3, 2, 2, 2, 588, 586, 3, 2, 2, 2, 588, 589, 3, 2, 2, 2, 589,
	590, 3, 2, 2, 2, 590, 591, 7, 62, 2, 2, 591, 592, 7, 47, 2, 2, 592, 593,
	3, 2, 2, 2, 593, 594, 8, 51, 6, 2, 594, 106, 3, 2, 2, 2, 595, 597, 9, 28,
	2, 2, 596, 595, 3, 2, 2, 2, 597, 600, 3, 2, 2, 2, 598, 596, 3, 2, 2, 2,
	598, 599, 3, 2, 2, 2, 599, 601, 3, 2, 2, 2, 600, 598, 3, 2, 2, 2, 601,
	602, 7, 60, 2, 2, 602, 603, 7, 60, 2, 2, 603, 607, 3, 2, 2, 2, 604, 606,
	9, 28, 2, 2, 605, 604, 3, 2, 2, 2, 606, 609, 3, 2, 2, 2, 607, 605, 3, 2,
	2, 2, 607, 608, 3, 2, 2, 2, 608, 108, 3, 2, 2, 2, 609, 607, 3, 2, 2, 2,
	610, 611, 7, 62, 2, 2, 611, 612, 7, 60, 2, 2, 612, 110, 3, 2, 2, 2, 613,
	614, 7, 62, 2, 2, 614, 615, 7, 47, 2, 2, 615, 616, 3, 2, 2, 2, 616, 617,
	8, 54, 6, 2, 617, 112, 3, 2, 2, 2, 618, 620, 9, 28, 2, 2, 619, 618, 3,
	2, 2, 2, 620, 623, 3, 2, 2, 2, 621, 619, 3, 2, 2, 2, 621, 622, 3, 2, 2,
	2, 622, 624, 3, 2, 2, 2, 623, 621, 3, 2, 2, 2, 624, 625, 7, 47, 2, 2, 625,
	626, 7, 64, 2, 2, 626, 630, 3, 2, 2, 2, 627, 629, 9, 28, 2, 2, 628, 627,
	3, 2, 2, 2, 629, 632, 3, 2, 2, 2, 630, 628, 3, 2, 2, 2, 630, 631, 3, 2,
	2, 2, 631, 114, 3, 2, 2, 2, 632, 630, 3, 2, 2, 2, 633, 634, 7, 48, 2, 2,
	634, 635, 7, 48, 2, 2, 635, 636, 7, 34, 2, 2, 636, 637, 7, 44, 2, 2, 637,
	638, 7, 34, 2, 2, 638, 639, 7, 62, 2, 2, 639, 640, 7, 47, 2, 2, 640, 641,
	7, 34, 2, 2, 641, 642, 7, 44, 2, 2, 642, 116, 3, 2, 2, 2, 643, 644, 7,
	45, 2, 2, 644, 118, 3, 2, 2, 2, 645, 646, 7, 128, 2, 2, 646, 120, 3, 2,
	2, 2, 647, 648, 7, 46, 2, 2, 648, 122, 3, 2, 2, 2, 649, 650, 7, 63, 2,
	2, 650, 124, 3, 2, 2, 2, 651, 652, 7, 38, 2, 2, 652, 126, 3, 2, 2, 2, 653,
	654, 7, 49, 2, 2, 654, 655, 8, 62, 7, 2, 655, 128, 3, 2, 2, 2, 656, 657,
	7, 44, 2, 2, 657, 130, 3, 2, 2, 2, 658, 659, 7, 60, 2, 2, 659, 132, 3,
	2, 2, 2, 660, 661, 7, 39, 2, 2, 661, 134, 3, 2, 2, 2, 662, 663, 7, 48,
	2, 2, 663, 136, 3, 2, 2, 2, 664, 665, 7, 35, 2, 2, 665, 138, 3, 2, 2, 2,
	666, 667, 7, 65, 2, 2, 667, 140, 3, 2, 2, 2, 668, 669, 7, 66, 2, 2, 669,
	670, 3, 2, 2, 2, 670, 671, 8, 69, 8, 2, 671, 142, 3, 2, 2, 2, 672, 673,
	7, 40, 2, 2, 673, 674, 6, 70, 3, 2, 674, 144, 3, 2, 2, 2, 675, 676, 7,
	93, 2, 2, 676, 677, 8, 71, 9, 2, 677, 146, 3, 2, 2, 2, 678, 679, 7, 95,
	2, 2, 679, 680, 8, 72, 10, 2, 680, 148, 3, 2, 2, 2, 681, 682, 7, 125, 2,
	2, 682, 150, 3, 2, 2, 2, 683, 684, 7, 127, 2, 2, 684, 152, 3, 2, 2, 2,
	685, 686, 7, 42, 2, 2, 686, 154, 3, 2, 2, 2, 687, 688, 7, 43, 2, 2, 688,
	156, 3, 2, 2, 2, 689, 691, 7, 37, 2, 2, 690, 692, 7, 15, 2, 2, 691, 690,
	3, 2, 2, 2, 691, 692, 3, 2, 2, 2, 692, 693, 3, 2, 2, 2, 693, 694, 7, 12,
	2, 2, 694, 695, 3, 2, 2, 2, 695, 696, 8, 77, 11, 2, 696, 697, 3, 2, 2,
	2, 697, 698, 8, 77, 12, 2, 698, 158, 3, 2, 2, 2, 699, 700, 7, 37, 2, 2,
	700, 701, 3, 2, 2, 2, 701, 702, 8, 78, 4, 2, 702, 160, 3, 2, 2, 2, 703,
	704, 7, 126, 2, 2, 704, 705, 3, 2, 2, 2, 705, 706, 8, 79, 4, 2, 706, 162,
	3, 2, 2, 2, 707, 708, 9, 30, 2, 2, 708, 164, 3, 2, 2, 2, 709, 710, 9, 31,
	2, 2, 710, 166, 3, 2, 2, 2, 711, 713, 9, 28, 2, 2, 712, 711, 3, 2, 2, 2,
	713, 714, 3, 2, 2, 2, 714, 712, 3, 2, 2, 2, 714, 715, 3, 2, 2, 2, 715,
	717, 3, 2, 2, 2, 716, 718, 9, 32, 2, 2, 717, 716, 3, 2, 2, 2, 718, 719,
	3, 2, 2, 2, 719, 720, 8, 82, 13, 2, 720, 721, 3, 2, 2, 2, 721, 722, 8,
	82, 12, 2, 722, 168, 3, 2, 2, 2, 723, 725, 9, 28, 2, 2, 724, 723, 3, 2,
	2, 2, 725, 726, 3, 2, 2, 2, 726, 724, 3, 2, 2, 2, 726, 727, 3, 2, 2, 2,
	727, 728, 3, 2, 2, 2, 728, 732, 7, 37, 2, 2, 729, 731, 10, 33, 2, 2, 730,
	729, 3, 2, 2, 2, 731, 734, 3, 2, 2, 2, 732, 730, 3, 2, 2, 2, 732, 733,
	3, 2, 2, 2, 733, 736, 3, 2, 2, 2, 734, 732, 3, 2, 2, 2, 735, 737, 9, 34,
	2, 2, 736, 735, 3, 2, 2, 2, 737, 738, 3, 2, 2, 2, 738, 739, 8, 83, 14,
	2, 739, 740, 3, 2, 2, 2, 740, 741, 8, 83, 12, 2, 741, 170, 3, 2, 2, 2,
	742, 746, 9, 35, 2, 2, 743, 745, 9, 35, 2, 2, 744, 743, 3, 2, 2, 2, 745,
	748, 3, 2, 2, 2, 746, 744, 3, 2, 2, 2, 746, 747, 3, 2, 2, 2, 747, 172,
	3, 2, 2, 2, 748, 746, 3, 2, 2, 2, 749, 751, 10, 36, 2, 2, 750, 749, 3,
	2, 2, 2, 751, 754, 3, 2, 2, 2, 752, 750, 3, 2, 2, 2, 752, 753, 3, 2, 2,
	2, 753, 174, 3, 2, 2, 2, 754, 752, 3, 2, 2, 2, 755, 757, 10, 37, 2, 2,
	756, 755, 3, 2, 2, 2, 757, 760, 3, 2, 2, 2, 758, 756, 3, 2, 2, 2, 758,
	759, 3, 2, 2, 2, 759, 176, 3, 2, 2, 2, 760, 758, 3, 2, 2, 2, 761, 762,
	5, 163, 80, 2, 762, 763, 5, 173, 85, 2, 763, 764, 5, 163, 80, 2, 764, 770,
	3, 2, 2, 2, 765, 766, 5, 165, 81, 2, 766, 767, 5, 175, 86, 2, 767, 768,
	5, 165, 81, 2, 768, 770, 3, 2, 2, 2, 769, 761, 3, 2, 2, 2, 769, 765, 3,
	2, 2, 2, 770, 178, 3, 2, 2, 2, 771, 773, 7, 15, 2, 2, 772, 771, 3, 2, 2,
	2, 772, 773, 3, 2, 2, 2, 773, 774, 3, 2, 2, 2, 774, 775, 7, 12, 2, 2, 775,
	776, 8, 88, 15, 2, 776, 777, 3, 2, 2, 2, 777, 778, 8, 88, 12, 2, 778, 180,
	3, 2, 2, 2, 779, 780, 5, 159, 78, 2, 780, 781, 5, 213, 105, 2, 781, 782,
	3, 2, 2, 2, 782, 783, 8, 89, 12, 2, 783, 182, 3, 2, 2, 2, 784, 786, 10,
	38, 2, 2, 785, 784, 3, 2, 2, 2, 786, 787, 3, 2, 2, 2, 787, 785, 3, 2, 2,
	2, 787, 788, 3, 2, 2, 2, 788, 184, 3, 2, 2, 2, 789, 790, 7, 62, 2, 2, 790,
	791, 5, 183, 90, 2, 791, 792, 7, 64, 2, 2, 792, 186, 3, 2, 2, 2, 793, 803,
	5, 183, 90, 2, 794, 796, 9, 39, 2, 2, 795, 794, 3, 2, 2, 2, 796, 797, 3,
	2, 2, 2, 797, 795, 3, 2, 2, 2, 797, 798, 3, 2, 2, 2, 798, 801, 3, 2, 2,
	2, 799, 802, 5, 183, 90, 2, 800, 802, 5, 185, 91, 2, 801, 799, 3, 2, 2,
	2, 801, 800, 3, 2, 2, 2, 802, 804, 3, 2, 2, 2, 803, 795, 3, 2, 2, 2, 804,
	805, 3, 2, 2, 2, 805, 803, 3, 2, 2, 2, 805, 806, 3, 2, 2, 2, 806, 807,
	3, 2, 2, 2, 807, 808, 6, 92, 4, 2, 808, 809, 6, 92, 5, 2, 809, 188, 3,
	2, 2, 2, 810, 814, 9, 40, 2, 2, 811, 813, 9, 41, 2, 2, 812, 811, 3, 2,
	2, 2, 813, 816, 3, 2, 2, 2, 814, 812, 3, 2, 2, 2, 814, 815, 3, 2, 2, 2,
	815, 190, 3, 2, 2, 2, 816, 814, 3, 2, 2, 2, 817, 819, 9, 28, 2, 2, 818,
	817, 3, 2, 2, 2, 819, 820, 3, 2, 2, 2, 820, 818, 3, 2, 2, 2, 820, 821,
	3, 2, 2, 2, 821, 822, 3, 2, 2, 2, 822, 823, 8, 94, 16, 2, 823, 824, 3,
	2, 2, 2, 824, 825, 8, 94, 12, 2, 825, 192, 3, 2, 2, 2, 826, 828, 10, 42,
	2, 2, 827, 826, 3, 2, 2, 2, 828, 831, 3, 2, 2, 2, 829, 827, 3, 2, 2, 2,
	829, 830, 3, 2, 2, 2, 830, 832, 3, 2, 2, 2, 831, 829, 3, 2, 2, 2, 832,
	833, 8, 95, 17, 2, 833, 194, 3, 2, 2, 2, 834, 835, 9, 43, 2, 2, 835, 836,
	3, 2, 2, 2, 836, 837, 8, 96, 18, 2, 837, 196, 3, 2, 2, 2, 838, 839, 7,
	62, 2, 2, 839, 840, 7, 60, 2, 2, 840, 198, 3, 2, 2, 2, 841, 842, 7, 93,
	2, 2, 842, 843, 8, 98, 19, 2, 843, 844, 3, 2, 2, 2, 844, 845, 8, 98, 17,
	2, 845, 200, 3, 2, 2, 2, 846, 847, 5, 163, 80, 2, 847, 848, 5, 173, 85,
	2, 848, 849, 5, 163, 80, 2, 849, 855, 3, 2, 2, 2, 850, 851, 5, 165, 81,
	2, 851, 852, 5, 175, 86, 2, 852, 853, 5, 165, 81, 2, 853, 855, 3, 2, 2,
	2, 854, 846, 3, 2, 2, 2, 854, 850, 3, 2, 2, 2, 855, 202, 3, 2, 2, 2, 856,
	858, 10, 44, 2, 2, 857, 856, 3, 2, 2, 2, 858, 859, 3, 2, 2, 2, 859, 857,
	3, 2, 2, 2, 859, 860, 3, 2, 2, 2, 860, 204, 3, 2, 2, 2, 861, 862, 7, 42,
	2, 2, 862, 206, 3, 2, 2, 2, 863, 864, 7, 43, 2, 2, 864, 865, 3, 2, 2, 2,
	865, 866, 8, 102, 17, 2, 866, 208, 3, 2, 2, 2, 867, 871, 7, 46, 2, 2, 868,
	870, 9, 28, 2, 2, 869, 868, 3, 2, 2, 2, 870, 873, 3, 2, 2, 2, 871, 869,
	3, 2, 2, 2, 871, 872, 3, 2, 2, 2, 872, 210, 3, 2, 2, 2, 873, 871, 3, 2,
	2, 2, 874, 876, 7, 15, 2, 2, 875, 874, 3, 2, 2, 2, 875, 876, 3, 2, 2, 2,
	876, 877, 3, 2, 2, 2, 877, 878, 7, 12, 2, 2, 878, 879, 8, 104, 20, 2, 879,
	880, 3, 2, 2, 2, 880, 881, 8, 104, 12, 2, 881, 882, 8, 104, 17, 2, 882,
	212, 3, 2, 2, 2, 883, 885, 10, 45, 2, 2, 884, 883, 3, 2, 2, 2, 885, 886,
	3, 2, 2, 2, 886, 884, 3, 2, 2, 2, 886, 887, 3, 2, 2, 2, 887, 888, 3, 2,
	2, 2, 888, 889, 8, 105, 17, 2, 889, 214, 3, 2, 2, 2, 890, 891, 9, 43, 2,
	2, 891, 892, 3, 2, 2, 2, 892, 893, 8, 106, 18, 2, 893, 894, 8, 106, 17,
	2, 894, 216, 3, 2, 2, 2, 895, 899, 9, 40, 2, 2, 896, 898, 9, 46, 2, 2,
	897, 896, 3, 2, 2, 2, 898, 901, 3, 2, 2, 2, 899, 897, 3, 2, 2, 2, 899,
	900, 3, 2, 2, 2, 900, 902, 3, 2, 2, 2, 901, 899, 3, 2, 2, 2, 902, 903,
	8, 107, 17, 2, 903, 218, 3, 2, 2, 2, 55, 2, 3, 4, 5, 6, 336, 359, 364,
	398, 404, 411, 413, 418, 439, 451, 462, 474, 488, 501, 514, 526, 540, 558,
	570, 588, 598, 607, 621, 630, 691, 714, 717, 726, 732, 736, 746, 752, 758,
	769, 772, 787, 797, 801, 805, 814, 820, 829, 854, 859, 871, 875, 886, 899,
	21, 3, 29, 2, 3, 35, 3, 7, 5, 2, 7, 3, 2, 7, 4, 2, 3, 62, 4, 7, 6, 2, 3,
	71, 5, 3, 72, 6, 3, 77, 7, 2, 3, 2, 3, 82, 8, 3, 83, 9, 3, 88, 10, 3, 94,
	11, 6, 2, 2, 8, 2, 2, 3, 98, 12, 3, 104, 13,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE", "PREDICATE", "ARGS", "NOT_NEWLINE", "AT_VAR_DECL",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "'!wrap'", "'!table'", "'!type'", "", "", "", "", "",
	"", "", "", "", "", "'...'", "'..'", "", "", "", "'<->'", "", "", "", "'<-'",
	"", "'.. * <- *'", "'+'", "'~'", "','", "'='", "'$'", "'/'", "'*'", "':'",
	"'%'", "'.'", "'!'", "'?'", "'@'", "'&'", "'['", "']'", "'{'", "'}'", "",
	"", "", "'#'", "'|'",
}

var lexerSymbolicNames = []string{
	"", "INDENT", "DEDENT", "NativeDataTypes", "HTTP_VERBS", "WRAP", "TABLE",
	"TYPE", "IMPORT", "RETURN", "IF", "FOR_EACH", "FOR", "UNTIL", "ELSE", "LOOP",
	"ALT", "WHILE", "WHATEVER", "DOTDOT", "SET_OF", "ONE_OF", "MIXIN", "DISTANCE",
	"DOT_ARROW", "NAME_SEP", "LESS_COLON", "ARROW_LEFT", "ARROW_RIGHT", "COLLECTOR",
	"PLUS", "TILDE", "COMMA", "EQ", "DOLLAR", "FORWARD_SLASH", "STAR", "COLON",
	"PERCENT", "DOT", "EXCLAIM", "QN", "AT", "AMP", "SQ_OPEN", "SQ_CLOSE",
	"CURLY_OPEN", "CURLY_CLOSE", "OPEN_PAREN", "CLOSE_PAREN", "EMPTY_COMMENT",
	"HASH", "PIPE", "DBL_QT", "SINGLE_QT", "EMPTY_LINE", "INDENTED_COMMENT",
	"DIGITS", "QSTRING", "NEWLINE", "SYSL_COMMENT", "TEXT_LINE", "Name", "WS",
	"PREDICATE_VALUE", "SKIP_WS_ARG", "LESS_COLON_2", "SQ_OPEN_2", "Q_ARG",
	"TEXT_VALUE", "OPEN_PAREN_ARG", "CLOSE_PAREN_ARG", "COMMA_ARG", "NEWLINE_2",
	"TEXT", "POP_WS", "VAR_NAME",
}

var lexerRuleNames = []string{
	"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O",
	"P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "NativeDataTypes",
	"HTTP_VERBS", "WRAP", "TABLE", "TYPE", "IMPORT_KEY", "SUB_PATH_NAME", "IMPORT",
	"RETURN", "IF", "FOR_EACH", "FOR", "UNTIL", "ELSE", "LOOP", "ALT", "WHILE",
	"WHATEVER", "DOTDOT", "SET_OF", "ONE_OF", "MIXIN", "DISTANCE", "DOT_ARROW",
	"NAME_SEP", "LESS_COLON", "ARROW_LEFT", "ARROW_RIGHT", "COLLECTOR", "PLUS",
	"TILDE", "COMMA", "EQ", "DOLLAR", "FORWARD_SLASH", "STAR", "COLON", "PERCENT",
	"DOT", "EXCLAIM", "QN", "AT", "AMP", "SQ_OPEN", "SQ_CLOSE", "CURLY_OPEN",
	"CURLY_CLOSE", "OPEN_PAREN", "CLOSE_PAREN", "EMPTY_COMMENT", "HASH", "PIPE",
	"DBL_QT", "SINGLE_QT", "EMPTY_LINE", "INDENTED_COMMENT", "DIGITS", "WITHIN_DBL_QTS",
	"WITHIN_SNGL_QTS", "QSTRING", "NEWLINE", "SYSL_COMMENT", "PRINTABLE", "IN_ANGLE",
	"TEXT_LINE", "Name", "WS", "PREDICATE_VALUE", "SKIP_WS_ARG", "LESS_COLON_2",
	"SQ_OPEN_2", "Q_ARG", "TEXT_VALUE", "OPEN_PAREN_ARG", "CLOSE_PAREN_ARG",
	"COMMA_ARG", "NEWLINE_2", "TEXT", "POP_WS", "VAR_NAME",
}

type SyslLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewSyslLexer(input antlr.CharStream) *SyslLexer {

	l := new(SyslLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "SyslLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SyslLexer tokens.
const (
	SyslLexerINDENT           = 1
	SyslLexerDEDENT           = 2
	SyslLexerNativeDataTypes  = 3
	SyslLexerHTTP_VERBS       = 4
	SyslLexerWRAP             = 5
	SyslLexerTABLE            = 6
	SyslLexerTYPE             = 7
	SyslLexerIMPORT           = 8
	SyslLexerRETURN           = 9
	SyslLexerIF               = 10
	SyslLexerFOR_EACH         = 11
	SyslLexerFOR              = 12
	SyslLexerUNTIL            = 13
	SyslLexerELSE             = 14
	SyslLexerLOOP             = 15
	SyslLexerALT              = 16
	SyslLexerWHILE            = 17
	SyslLexerWHATEVER         = 18
	SyslLexerDOTDOT           = 19
	SyslLexerSET_OF           = 20
	SyslLexerONE_OF           = 21
	SyslLexerMIXIN            = 22
	SyslLexerDISTANCE         = 23
	SyslLexerDOT_ARROW        = 24
	SyslLexerNAME_SEP         = 25
	SyslLexerLESS_COLON       = 26
	SyslLexerARROW_LEFT       = 27
	SyslLexerARROW_RIGHT      = 28
	SyslLexerCOLLECTOR        = 29
	SyslLexerPLUS             = 30
	SyslLexerTILDE            = 31
	SyslLexerCOMMA            = 32
	SyslLexerEQ               = 33
	SyslLexerDOLLAR           = 34
	SyslLexerFORWARD_SLASH    = 35
	SyslLexerSTAR             = 36
	SyslLexerCOLON            = 37
	SyslLexerPERCENT          = 38
	SyslLexerDOT              = 39
	SyslLexerEXCLAIM          = 40
	SyslLexerQN               = 41
	SyslLexerAT               = 42
	SyslLexerAMP              = 43
	SyslLexerSQ_OPEN          = 44
	SyslLexerSQ_CLOSE         = 45
	SyslLexerCURLY_OPEN       = 46
	SyslLexerCURLY_CLOSE      = 47
	SyslLexerOPEN_PAREN       = 48
	SyslLexerCLOSE_PAREN      = 49
	SyslLexerEMPTY_COMMENT    = 50
	SyslLexerHASH             = 51
	SyslLexerPIPE             = 52
	SyslLexerDBL_QT           = 53
	SyslLexerSINGLE_QT        = 54
	SyslLexerEMPTY_LINE       = 55
	SyslLexerINDENTED_COMMENT = 56
	SyslLexerDIGITS           = 57
	SyslLexerQSTRING          = 58
	SyslLexerNEWLINE          = 59
	SyslLexerSYSL_COMMENT     = 60
	SyslLexerTEXT_LINE        = 61
	SyslLexerName             = 62
	SyslLexerWS               = 63
	SyslLexerPREDICATE_VALUE  = 64
	SyslLexerSKIP_WS_ARG      = 65
	SyslLexerLESS_COLON_2     = 66
	SyslLexerSQ_OPEN_2        = 67
	SyslLexerQ_ARG            = 68
	SyslLexerTEXT_VALUE       = 69
	SyslLexerOPEN_PAREN_ARG   = 70
	SyslLexerCLOSE_PAREN_ARG  = 71
	SyslLexerCOMMA_ARG        = 72
	SyslLexerNEWLINE_2        = 73
	SyslLexerTEXT             = 74
	SyslLexerPOP_WS           = 75
	SyslLexerVAR_NAME         = 76
)

// SyslLexer modes.
const (
	SyslLexerPREDICATE = iota + 1
	SyslLexerARGS
	SyslLexerNOT_NEWLINE
	SyslLexerAT_VAR_DECL
)

var spaces int
var linenum int
var in_sq_brackets int

var gotNewLine bool
var gotHttpVerb bool
var prevTokenIndex = -1

func (l *SyslLexer) NextToken() antlr.Token {
	return GetNextToken(l)
}

func (l *SyslLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 27:
		l.HTTP_VERBS_Action(localctx, actionIndex)

	case 33:
		l.IMPORT_Action(localctx, actionIndex)

	case 60:
		l.FORWARD_SLASH_Action(localctx, actionIndex)

	case 69:
		l.SQ_OPEN_Action(localctx, actionIndex)

	case 70:
		l.SQ_CLOSE_Action(localctx, actionIndex)

	case 75:
		l.EMPTY_COMMENT_Action(localctx, actionIndex)

	case 80:
		l.EMPTY_LINE_Action(localctx, actionIndex)

	case 81:
		l.INDENTED_COMMENT_Action(localctx, actionIndex)

	case 86:
		l.NEWLINE_Action(localctx, actionIndex)

	case 92:
		l.WS_Action(localctx, actionIndex)

	case 96:
		l.SQ_OPEN_2_Action(localctx, actionIndex)

	case 102:
		l.NEWLINE_2_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *SyslLexer) HTTP_VERBS_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 0:
		gotHttpVerb = true

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) IMPORT_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 1:
		gotNewLine = true
		spaces = 0
		gotHttpVerb = false
		linenum++

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) FORWARD_SLASH_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 2:
		gotHttpVerb = true

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) SQ_OPEN_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 3:
		in_sq_brackets++

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) SQ_CLOSE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 4:
		in_sq_brackets--

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) EMPTY_COMMENT_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 5:
		gotNewLine = true
		spaces = 0
		gotHttpVerb = false
		linenum++

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) EMPTY_LINE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 6:
		gotNewLine = true
		spaces = 0
		gotHttpVerb = false
		linenum++

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) INDENTED_COMMENT_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 7:
		gotNewLine = true
		spaces = 0
		gotHttpVerb = false
		linenum++

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) NEWLINE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 8:
		gotNewLine = true
		gotHttpVerb = false
		spaces = 0
		linenum++

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) WS_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 9:
		spaces = calcSpaces(l.GetText())

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) SQ_OPEN_2_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 10:
		in_sq_brackets++

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *SyslLexer) NEWLINE_2_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 11:
		gotNewLine = true
		gotHttpVerb = false
		spaces = 0
		linenum++

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}

func (l *SyslLexer) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {
	switch ruleIndex {
	case 26:
		return l.NativeDataTypes_Sempred(localctx, predIndex)

	case 68:
		return l.AMP_Sempred(localctx, predIndex)

	case 90:
		return l.TEXT_LINE_Sempred(localctx, predIndex)

	default:
		panic("No registered predicate for: " + fmt.Sprint(ruleIndex))
	}
}

func (p *SyslLexer) NativeDataTypes_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 0:
		return in_sq_brackets == 0

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *SyslLexer) AMP_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 1:
		return gotHttpVerb

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *SyslLexer) TEXT_LINE_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 2:
		return in_sq_brackets == 0

	case 3:
		return startsWithKeyword(p.GetText()) == false

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}
